#include <PDM.h>
#include <arduinoFFT.h>

#define SAMPLES 256
#define SAMPLING_FREQUENCY 16000

short sampleBuffer[SAMPLES];
volatile int samplesRead;

double vReal[SAMPLES];
double vImag[SAMPLES];

void onPDMdata(void);

void setup() {
  Serial.begin(115200);

  while (!Serial) {
    ; // wait for serial port to connect
  }

  PDM.onReceive(onPDMdata);
  PDM.setBufferSize(SAMPLES);

  if (!PDM.begin(1,16000)) {
    Serial.println("Failed to start PDM!");
    while (1);
  }

  void omPDMdata()
  {
    int bytesAvailable = PDM.available();
    PDM.read(sampleBuffer, bytesAvailable);
    samplesRead = bytesAvailable / 2;
  }

  void loop() {
    if(SamplesRead) {
      if (samplesRead) {
    for (int i = 0; i < SAMPLES; i++) {
      vReal[i] = sampleBuffer[i];
      vImag[i] = 0;
    }
    
    FFT.Windowing(vReal, SAMPLES, FFT_WIN_TYP_HAMMING, FFT_FORWARD);
    FFT.Compute(vReal, vImag, SAMPLES, FFT_FORWARD);
    FFT.ComplexToMagnitude(vReal, vImag, SAMPLES);
    
double peak = FFT.MajorPeak(vReal, SAMPLES, SAMPLING_FREQUENCY);

Serial.println(peak);
      
    }
  }
}
